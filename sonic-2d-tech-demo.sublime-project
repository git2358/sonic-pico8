{
	"build_systems":
	[
		{
			"name": "Dev: analyze engine scripts (intermediate release)",
			"shell": true,
			"working_dir": "${project_path}",
			"cmd": ["pico-boots/scripts/analyze.py intermediate/release/pico-boots"],
			"file_regex": "\"(.*\\.py)\"(?:, line )([\\d]+)(?:\\:)?([\\d]+)?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Dev: analyze game scripts (intermediate release)",
			"shell": true,
			"working_dir": "${project_path}",
			"cmd": ["pico-boots/scripts/analyze.py intermediate/release/src"],
			"file_regex": "\"(.*\\.py)\"(?:, line )([\\d]+)(?:\\:)?([\\d]+)?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Engine: setup",
			"working_dir": "${project_path}/pico-boots",
			"shell": true,
			"cmd": ["./setup.sh"],
			"syntax": "Packages/Python/Python.sublime-syntax",
		},
		{
			"name": "Game: edit data: common",
			"shell": true,
			"cmd": ["./edit_data.sh"],
			"working_dir": "${project_path}"
		},
		{
			"name": "Game: edit data: bgm",
			"shell": true,
			"cmd": ["pico8 data/data_bgm1.p8"],
			"working_dir": "${project_path}"
		},
		{
			"name": "Game: edit data: stage1 runtime",
			"shell": true,
			"cmd": ["pico8 data/data_stage1_runtime.p8"],
			"working_dir": "${project_path}"
		},
		{
			"name": "Game: edit data: stage1",
			"shell": true,
			"cmd": ["pico8 -run data/data_stage1_00.p8"],
			"working_dir": "${project_path}",
			"variants":
			[
				{
					"name": "00",
					"cmd": ["pico8 data/data_stage1_00.p8"],
				},
				{
					"name": "01",
					"cmd": ["pico8 data/data_stage1_01.p8"],
				},
				{
					"name": "10",
					"cmd": ["pico8 data/data_stage1_10.p8"],
				},
				{
					"name": "11",
					"cmd": ["pico8 data/data_stage1_11.p8"],
				},
				{
					"name": "20",
					"cmd": ["pico8 data/data_stage1_20.p8"],
				},
				{
					"name": "21",
					"cmd": ["pico8 data/data_stage1_21.p8"],
				},
				{
					"name": "30",
					"cmd": ["pico8 data/data_stage1_30.p8"],
				},
				{
					"name": "31",
					"cmd": ["pico8 data/data_stage1_31.p8"],
				},
			]
		},
		{
			"name": "Game: edit metadata",
			"shell": true,
			"cmd": ["./edit_metadata.sh"],
			"working_dir": "${project_path}"
		},
		{
			"name": "Game: build cartridge titlemenu",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_single_cartridge.sh titlemenu debug"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "debug",
					"cmd": ["./build_single_cartridge.sh titlemenu debug"]
				},
				{
					"name": "release",
					"cmd": ["./build_single_cartridge.sh titlemenu release"]
				}
			]
		},
		{
			"name": "Game: build cartridge ingame",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_single_cartridge.sh ingame debug"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "debug",
					"cmd": ["./build_single_cartridge.sh ingame debug"]
				},
				{
					"name": "debug-ultrafast",
					"cmd": ["./build_single_cartridge.sh ingame debug-ultrafast"]
				},
				{
					"name": "cheat",
					"cmd": ["./build_single_cartridge.sh ingame cheat"]
				},
				{
					"name": "tuner",
					"cmd": ["./build_single_cartridge.sh ingame tuner"]
				},
				{
					"name": "ultrafast",
					"cmd": ["./build_single_cartridge.sh ingame ultrafast"]
				},
				{
					"name": "cheat-ultrafast",
					"cmd": ["./build_single_cartridge.sh ingame cheat-ultrafast"]
				},
				{
					"name": "sandbox",
					"cmd": ["./build_single_cartridge.sh ingame sandbox"]
				},
				{
					"name": "assert",
					"cmd": ["./build_single_cartridge.sh ingame assert"]
				},
				{
					"name": "profiler",
					"cmd": ["./build_single_cartridge.sh ingame profiler"]
				},
				{
					"name": "release",
					"cmd": ["./build_single_cartridge.sh ingame release"]
				}
			]
		},
		{
			"name": "Game: build itests titlemenu",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_itest.sh titlemenu"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
		},
		{
			"name": "Game: build itests ingame",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_itest.sh ingame"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
		},
		{
			"name": "Game: build pico8 utests",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_pico8_utests.sh"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Game: build and run ingame",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_and_install_single_cartridge.sh ingame debug && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame debug)"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "debug",
					"cmd": ["./build_and_install_single_cartridge.sh ingame debug && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame debug)"]
				},
				{
					"name": "debug-ultrafast",
					"cmd": ["./build_and_install_single_cartridge.sh ingame debug-ultrafast && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame debug-ultrafast)"]
				},
				{
					"name": "cheat",
					"cmd": ["./build_and_install_single_cartridge.sh ingame cheat && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame cheat)"]
				},
				{
					"name": "tuner",
					"cmd": ["./build_and_install_single_cartridge.sh ingame tuner && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame tuner)"]
				},
				{
					"name": "ultrafast",
					"cmd": ["./build_and_install_single_cartridge.sh ingame ultrafast && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame ultrafast)"]
				},
				{
					"name": "cheat-ultrafast",
					"cmd": ["./build_and_install_single_cartridge.sh ingame cheat-ultrafast && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame cheat-ultrafast)"]
				},
				{
					"name": "sandbox",
					"cmd": ["./build_and_install_single_cartridge.sh ingame sandbox && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame sandbox)"]
				},
				{
					"name": "assert",
					"cmd": ["./build_and_install_single_cartridge.sh ingame assert && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame assert)"]
				},
				{
					"name": "profiler",
					"cmd": ["./build_and_install_single_cartridge.sh ingame profiler && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame profiler)"]
				},
				{
					"name": "release",
					"cmd": ["./build_and_install_single_cartridge.sh ingame release && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh ingame release)"]
				},
			]
		},
		{
			"name": "Game: build and run titlemenu",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_and_install_single_cartridge.sh titlemenu debug && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh titlemenu debug)"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "debug",
					"cmd": ["./build_and_install_single_cartridge.sh titlemenu debug && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh titlemenu debug)"]
				},
				{
					"name": "cheat",
					"cmd": ["./build_and_install_single_cartridge.sh titlemenu cheat && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh titlemenu cheat)"]
				},
				{
					"name": "tuner",
					"cmd": ["./build_and_install_single_cartridge.sh titlemenu tuner && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh titlemenu tuner)"]
				},
				{
					"name": "release",
					"cmd": ["./build_and_install_single_cartridge.sh titlemenu release && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh titlemenu release)"]
				},
			]
		},
		{
			"name": "Game: build and run full game",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_and_install_all_cartridges.sh debug && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh titlemenu debug)"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "debug",
					"cmd": ["./build_and_install_all_cartridges.sh debug && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh titlemenu debug)"]
				},
				{
					"name": "release",
					"cmd": ["./build_and_install_all_cartridges.sh release && (./pico-boots/scripts/reload.sh || ./run_cartridge.sh titlemenu release)"]
				},
			]
		},
		{
			"name": "Game: build and run itests titlemenu",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_itest.sh titlemenu && (./pico-boots/scripts/reload.sh || ./run_itest.sh titlemenu)"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
		},
		{
			"name": "Game: build and run itests ingame",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_itest.sh ingame && (./pico-boots/scripts/reload.sh || ./run_itest.sh ingame)"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
		},
		{
			"name": "Game: build and run pico8 utests",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./build_pico8_utests.sh && (./pico-boots/scripts/reload.sh || ./run_pico8_utests.sh)"],
			"file_regex": "(.*\\.sh)(?:\\: line )([\\d]+)(?:\\:)([\\d]+)? (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Game: start",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./run_cartridge.sh ingame debug"],
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "ingame debug",
					"cmd": ["./run_cartridge.sh ingame debug"]
				},
				{
					"name": "ingame debug-ultrafast",
					"cmd": ["./run_cartridge.sh ingame debug-ultrafast"]
				},
				{
					"name": "ingame cheat",
					"cmd": ["./run_cartridge.sh ingame cheat"]
				},
				{
					"name": "ingame tuner",
					"cmd": ["./run_cartridge.sh ingame tuner"]
				},
				{
					"name": "ingame ultrafast",
					"cmd": ["./run_cartridge.sh ingame ultrafast"]
				},
				{
					"name": "ingame cheat-ultrafast",
					"cmd": ["./run_cartridge.sh ingame cheat-ultrafast"]
				},
				{
					"name": "ingame sandbox",
					"cmd": ["./run_cartridge.sh ingame sandbox"]
				},
				{
					"name": "ingame assert",
					"cmd": ["./run_cartridge.sh ingame assert"]
				},
				{
					"name": "ingame profiler",
					"cmd": ["./run_cartridge.sh ingame profiler"]
				},
				{
					"name": "ingame release",
					"cmd": ["./run_cartridge.sh ingame release"]
				},
				{
					"name": "titlemenu debug",
					"cmd": ["./run_cartridge.sh titlemenu debug"]
				},
				{
					"name": "titlemenu release",
					"cmd": ["./run_cartridge.sh titlemenu release"]
				},
				{
					"name": "itests titlemenu",
					"cmd": ["./run_itest.sh titlemenu"],
				},
				{
					"name": "itests ingame",
					"cmd": ["./run_itest.sh ingame"],
				},
				{
					"name": "pico8 utests",
					"cmd": ["./run_pico8_utests.sh"],
				},
			]
		},
		{
			"name": "Game: install cartridge titlemenu",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./install_single_cartridge.sh titlemenu debug"],
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "debug",
					"cmd": ["./install_single_cartridge.sh titlemenu debug"]
				},
				{
					"name": "release",
					"cmd": ["./install_single_cartridge.sh titlemenu release"]
				},
				{
					"name": "debug (png)",
					"cmd": ["./install_single_cartridge.sh titlemenu debug png"]
				},
				{
					"name": "release (png)",
					"cmd": ["./install_single_cartridge.sh titlemenu release png"]
				}
			]
		},
		{
			"name": "Game: install cartridge ingame (with stage maps and bgm)",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./install_single_cartridge.sh ingame debug"],
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "debug",
					"cmd": ["./install_single_cartridge.sh ingame debug"]
				},
				{
					"name": "debug-ultrafast",
					"cmd": ["./install_single_cartridge.sh ingame debug-ultrafast"]
				},
				{
					"name": "cheat",
					"cmd": ["./install_single_cartridge.sh ingame cheat"]
				},
				{
					"name": "tuner",
					"cmd": ["./install_single_cartridge.sh ingame tuner"]
				},
				{
					"name": "ultrafast",
					"cmd": ["./install_single_cartridge.sh ingame ultrafast"]
				},
				{
					"name": "cheat-ultrafast",
					"cmd": ["./install_single_cartridge.sh ingame cheat-ultrafast"]
				},
				{
					"name": "sandbox",
					"cmd": ["./install_single_cartridge.sh ingame sandbox"]
				},
				{
					"name": "assert",
					"cmd": ["./install_single_cartridge.sh ingame assert"]
				},
				{
					"name": "profiler",
					"cmd": ["./install_single_cartridge.sh ingame profiler"]
				},
				{
					"name": "release",
					"cmd": ["./install_single_cartridge.sh ingame release"]
				},
				{
					"name": "cheat (png)",
					"cmd": ["./install_single_cartridge.sh ingame cheat png"]
				},
				{
					"name": "release (png)",
					"cmd": ["./install_single_cartridge.sh ingame release png"]
				}
			]
		},
		{
			"name": "Game: export cartridge release",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./export_cartridge_release.sh"],
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Game: test",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["./test.sh -f $file_base_name"],
			"env": {
				// won't work on headless_itests_utest, please use headless_itests command
				"ITEST_CARTRIDGE_SUFFIX": "ignore"
			},
			// known limitation: last \n won't be detected in build output, so cannot display multi-line errors
			"file_regex": "((?:pico-boots/src|src)\\/[-\\w\\/]+\\.lua)(?:\\:| @ )([\\d]+)(?:\\:)?([\\d]+)?\\n?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "(solo)",
					"cmd": ["./test.sh -f $file_base_name -m solo"],
					"env": {
						// won't work on headless_itests_utest, please use headless_itests command
						"ITEST_CARTRIDGE_SUFFIX": "ignore"
					}
				},
				{
					"name": "(all)",
					"cmd": ["./test.sh -f $file_base_name -m all"],
					"env": {
						// won't work on headless_itests_utest, please use headless_itests command
						"ITEST_CARTRIDGE_SUFFIX": "ignore"
					}
				},
				{
					"name": "*",
					"cmd": ["./test.sh"],
					"env": {
						// won't work on headless_itests_utest, please use headless_itests command
						"ITEST_CARTRIDGE_SUFFIX": "ignore"
					}
				},
				{
					"name": "* (solo)",
					"cmd": ["./test.sh -m solo"],
					"env": {
						// won't work on headless_itests_utest, please use headless_itests command
						"ITEST_CARTRIDGE_SUFFIX": "ignore"
					}
				},
				{
					"name": "* (all)",
					"cmd": ["./test.sh -m all"],
					"env": {
						// won't work on headless_itests_utest, please use headless_itests command
						"ITEST_CARTRIDGE_SUFFIX": "ignore"
					}
				},
				{
					"name": "application",
					"cmd": ["./test.sh application"],
				},
				{
					"name": "ingame",
					"cmd": ["./test.sh ingame"],
				},
				{
					"name": "itest",
					"cmd": ["./test.sh itest"],
				},
				{
					"name": "menu",
					"cmd": ["./test.sh menu"],
				},
				{
					"name": "platformer",
					"cmd": ["./test.sh platformer"],
				},
				{
					"name": "test_data",
					"cmd": ["./test.sh test_data"],
				},
				{
					"name": "headless_itests titlemenu",
					"cmd": ["./test.sh -f headless_itests"],
					"env": {
						"ITEST_CARTRIDGE_SUFFIX": "titlemenu"
					}
				},
				{
					"name": "headless_itests titlemenu (render)",
					"cmd": ["./test.sh -f headless_itests"],
					"env": {
						"ITEST_CARTRIDGE_SUFFIX": "titlemenu",
						"ENABLE_RENDER": "1"
					}
				},
				{
					"name": "headless_itests titlemenu - solo",
					"cmd": ["./test.sh -f headless_itests -m solo"],
					"env": {
						"ITEST_CARTRIDGE_SUFFIX": "titlemenu"
					}
				},
				{
					"name": "headless_itests titlemenu - solo (render)",
					"cmd": ["./test.sh -f headless_itests -m solo"],
					"env": {
						"ITEST_CARTRIDGE_SUFFIX": "titlemenu",
						"ENABLE_RENDER": "1"
					}
				},
				{
					"name": "headless_itests ingame",
					"cmd": ["./test.sh -f headless_itests"],
					"env": {
						"ITEST_CARTRIDGE_SUFFIX": "ingame"
					}
				},
				{
					"name": "headless_itests ingame (render)",
					"cmd": ["./test.sh -f headless_itests"],
					"env": {
						"ITEST_CARTRIDGE_SUFFIX": "ingame",
						"ENABLE_RENDER": "1"
					}
				},
				{
					"name": "headless_itests ingame - solo",
					"cmd": ["./test.sh -f headless_itests -m solo"],
					"env": {
						"ITEST_CARTRIDGE_SUFFIX": "ingame"
					}
				},
				{
					"name": "headless_itests ingame - solo (render)",
					"cmd": ["./test.sh -f headless_itests -m solo"],
					"env": {
						"ITEST_CARTRIDGE_SUFFIX": "ingame",
						"ENABLE_RENDER": "1"
					}
				},
			]
		},
		{
			"name": "Engine: test",
			"working_dir": "${project_path}/pico-boots",
			"shell": true,
			"cmd": ["./test.sh -f $file_base_name"],
			// known limitation: last \n won't be detected in build output, so cannot display multi-line errors
			"file_regex": "((?:src)\\/[-\\w\\/]+\\.lua)(?:\\:| @ )([\\d]+)(?:\\:)?([\\d]+)?\\n?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					"name": "(solo)",
					"cmd": ["./test.sh -f $file_base_name -m solo"]
				},
				{
					"name": "(all)",
					"cmd": ["./test.sh -f $file_base_name -m all"]
				},
				{
					"name": "*",
					"cmd": ["./test.sh"]
				},
				{
					"name": "* (solo)",
					"cmd": ["./test.sh -m solo"]
				},
				{
					"name": "* (all)",
					"cmd": ["./test.sh -m all"]
				}
			]
		},
		{
			"name": "All: test",
			"working_dir": "${project_path}",
			"shell": true,
			// note that luacov report is generated in the working directory, so the second test report will overwrite the previous one
			"cmd": ["ITEST_CARTRIDGE_SUFFIX=ignore ./test.sh && echo '' && ITEST_CARTRIDGE_SUFFIX=titlemenu ./test.sh -f headless_itests && echo '' && ITEST_CARTRIDGE_SUFFIX=ingame ./test.sh -f headless_itests && echo '' && pico-boots/test.sh"],
			// known limitation: last \n won't be detected in build output, so cannot display multi-line errors
			"file_regex": "((?:pico-boots/src|src)\\/[-\\w\\/]+\\.lua)(?:\\:| @ )([\\d]+)(?:\\:)?([\\d]+)?\\n?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax",
			"variants":
			[
				{
					// if you aim for 100% coverage including render methods for headless itests
					"name": "(render)",
					"env": {
						"ENABLE_RENDER": "1"
					}
				}
			]
		},
		{
			"name": "Engine: Postbuild: test add_metadata",
			"working_dir": "${project_path}/pico-boots",
			"shell": true,
			"cmd": ["python3 -m scripts.test_add_metadata"],
			"file_regex": "\"(.*\\.py)\"(?:, line )([\\d]+)(?:\\:)?([\\d]+)?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Engine: Postbuild: test add_require",
			"working_dir": "${project_path}/pico-boots",
			"shell": true,
			"cmd": ["python3 -m scripts.test_add_require"],
			"file_regex": "\"(.*\\.py)\"(?:, line )([\\d]+)(?:\\:)?([\\d]+)?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Engine: Postbuild: test analyze",
			"working_dir": "${project_path}/pico-boots",
			"shell": true,
			"cmd": ["python3 -m scripts.test_analyze"],
			"file_regex": "\"(.*\\.py)\"(?:, line )([\\d]+)(?:\\:)?([\\d]+)?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Engine: Postbuild: test minify",
			"working_dir": "${project_path}/pico-boots",
			"shell": true,
			"cmd": ["python3 -m scripts.test_minify"],
			"file_regex": "\"(.*\\.py)\"(?:, line )([\\d]+)(?:\\:)?([\\d]+)?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Engine: Postbuild: test preprocess",
			"working_dir": "${project_path}/pico-boots",
			"shell": true,
			"cmd": ["python3 -m scripts.test_preprocess"],
			"file_regex": "\"(.*\\.py)\"(?:, line )([\\d]+)(?:\\:)?([\\d]+)?(.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "Python (legacy): test replace_strings",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["python3 -m prebuild.test_replace_strings"],
			"file_regex": "\"(.*\\.py)\"(?:, line )([\\d]+)(?:\\:)?([\\d]+)?, (.*)",
			"syntax": "Packages/Python/Python.sublime-syntax"
		},
		{
			"name": "lua: parse",
			"selector": "source.lua,source.p8",
			"working_dir": "${project_path}",
			"shell": true,
			"cmd": ["luac -p $file"],
			"file_regex": "((?:src|tests)\\/[-\\w\\/]+\\.lua)(?:\\:| @ )([\\d]+)(?:\\:)?([\\d]+)?\\n?(.*)"
		},
	],
	"folders":
	[
		{
			"folder_exclude_patterns":
			[
				"backup",
				"carts"
			],
			"path": "~/.lexaloffle/pico-8"
		},
		{
			"folder_exclude_patterns":
			[
				".git",
				"backup",
				"build",
				"intermediate"
			],
			"path": "."
		}
	],
	"syntax_override":
	{
		"\\.lua$":
		[
			"sublime-PICO-8/PICO-8"
		],
		"\\.luacov":
		[
			"Lua/Lua"
		]
	}
}
